# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  run_linter:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  run_tests:
    runs-on: ubuntu-latest
    needs: [run_linter]
    env:
      CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest-cov
        pip install -r requirements.txt 
    - name: Test with pytest
      run: |
        pytest -s --cov=./ --cov-report=xml
    - name: Codecov
      uses: codecov/codecov-action@v1
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
  deploy: 
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    needs: [run_linter, run_tests]
    steps:
      - uses: actions/checkout@master

      - name: Build container
        run: docker build -t metrics.service .

      - name: Log in to Heroku Container Registry
        run: heroku container:login

      - name: Tag container
        run: docker tag metrics.service registry.heroku.com/staging-metrics-service/web

      - name: Push container
        run: docker push registry.heroku.com/staging-metrics-service/web

      - name: Release container
        run: heroku container:release web --app staging-metrics-service

      - name: Set PYTHON_ENV to stage
        run: heroku config:set PYTHON_ENV=stage --app staging-metrics-service